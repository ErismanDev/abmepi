# Generated by Django 5.0.2 on 2025-08-22 03:55

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("associados", "0005_alter_associado_posto_graduacao"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PreCadastroAssociado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=200, verbose_name="Nome Completo"),
                ),
                (
                    "cpf",
                    models.CharField(
                        max_length=14,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="CPF deve estar no formato XXX.XXX.XXX-XX",
                                regex="^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$",
                            )
                        ],
                        verbose_name="CPF",
                    ),
                ),
                ("rg", models.CharField(max_length=20, verbose_name="RG")),
                (
                    "data_nascimento",
                    models.DateField(verbose_name="Data de Nascimento"),
                ),
                (
                    "sexo",
                    models.CharField(
                        choices=[("M", "Masculino"), ("F", "Feminino"), ("O", "Outro")],
                        max_length=1,
                        verbose_name="Sexo",
                    ),
                ),
                (
                    "foto",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="associados/pre_cadastro/fotos/",
                        verbose_name="Foto",
                    ),
                ),
                (
                    "estado_civil",
                    models.CharField(
                        choices=[
                            ("solteiro", "Solteiro(a)"),
                            ("casado", "Casado(a)"),
                            ("divorciado", "Divorciado(a)"),
                            ("viuvo", "Viúvo(a)"),
                            ("uniao_estavel", "União Estável"),
                        ],
                        max_length=20,
                        verbose_name="Estado Civil",
                    ),
                ),
                ("email", models.EmailField(max_length=254, verbose_name="E-mail")),
                (
                    "telefone",
                    models.CharField(
                        blank=True, max_length=15, verbose_name="Telefone"
                    ),
                ),
                ("celular", models.CharField(max_length=15, verbose_name="Celular")),
                (
                    "cep",
                    models.CharField(
                        max_length=9,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="CEP deve estar no formato XXXXX-XXX",
                                regex="^\\d{5}-\\d{3}$",
                            )
                        ],
                        verbose_name="CEP",
                    ),
                ),
                ("rua", models.CharField(max_length=200, verbose_name="Rua")),
                ("numero", models.CharField(max_length=10, verbose_name="Número")),
                (
                    "complemento",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Complemento"
                    ),
                ),
                ("bairro", models.CharField(max_length=100, verbose_name="Bairro")),
                ("cidade", models.CharField(max_length=100, verbose_name="Cidade")),
                ("estado", models.CharField(max_length=2, verbose_name="Estado")),
                (
                    "tipo_profissao",
                    models.CharField(
                        choices=[
                            ("bombeiro", "Bombeiro"),
                            ("policial", "Policial"),
                            ("militar", "Militar"),
                            ("civil", "Civil"),
                            ("outro", "Outro"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Profissão",
                    ),
                ),
                (
                    "posto_graduacao",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Posto/Graduação"
                    ),
                ),
                (
                    "orgao",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Órgão/Instituição"
                    ),
                ),
                (
                    "matricula",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Matrícula"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pendente", "Pendente"),
                            ("aprovado", "Aprovado"),
                            ("rejeitado", "Rejeitado"),
                        ],
                        default="pendente",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "observacoes",
                    models.TextField(blank=True, verbose_name="Observações"),
                ),
                (
                    "data_solicitacao",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data da Solicitação"
                    ),
                ),
                (
                    "data_analise",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da Análise"
                    ),
                ),
                (
                    "motivo_rejeicao",
                    models.TextField(blank=True, verbose_name="Motivo da Rejeição"),
                ),
                (
                    "analisado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Analisado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pré-Cadastro de Associado",
                "verbose_name_plural": "Pré-Cadastros de Associados",
                "ordering": ["-data_solicitacao"],
            },
        ),
    ]
