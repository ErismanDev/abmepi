# Generated by Django 5.0.2 on 2025-08-13 11:28

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("associados", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Despesa",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=200, verbose_name="Descrição"),
                ),
                (
                    "categoria",
                    models.CharField(
                        choices=[
                            ("administrativa", "Administrativa"),
                            ("operacional", "Operacional"),
                            ("manutencao", "Manutenção"),
                            ("eventos", "Eventos"),
                            ("outros", "Outros"),
                        ],
                        max_length=20,
                        verbose_name="Categoria",
                    ),
                ),
                (
                    "valor",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                        verbose_name="Valor",
                    ),
                ),
                ("data_despesa", models.DateField(verbose_name="Data da Despesa")),
                (
                    "data_vencimento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Vencimento"
                    ),
                ),
                ("pago", models.BooleanField(default=False, verbose_name="Pago")),
                (
                    "fornecedor",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Fornecedor"
                    ),
                ),
                (
                    "nota_fiscal",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Número da Nota Fiscal"
                    ),
                ),
                (
                    "comprovante",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="financeiro/despesas/",
                        verbose_name="Comprovante",
                    ),
                ),
                (
                    "observacoes",
                    models.TextField(blank=True, verbose_name="Observações"),
                ),
                (
                    "data_criacao",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "data_atualizacao",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Data de Atualização"
                    ),
                ),
            ],
            options={
                "verbose_name": "Despesa",
                "verbose_name_plural": "Despesas",
                "ordering": ["-data_despesa"],
            },
        ),
        migrations.CreateModel(
            name="TipoMensalidade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100, verbose_name="Nome")),
                ("descricao", models.TextField(blank=True, verbose_name="Descrição")),
                (
                    "valor",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                        verbose_name="Valor",
                    ),
                ),
                (
                    "recorrente",
                    models.BooleanField(default=True, verbose_name="Recorrente"),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
            ],
            options={
                "verbose_name": "Tipo de Mensalidade",
                "verbose_name_plural": "Tipos de Mensalidade",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="Mensalidade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "valor",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                        verbose_name="Valor",
                    ),
                ),
                (
                    "data_vencimento",
                    models.DateField(verbose_name="Data de Vencimento"),
                ),
                (
                    "data_pagamento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data do Pagamento"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pendente", "Pendente"),
                            ("pago", "Pago"),
                            ("atrasado", "Atrasado"),
                            ("cancelado", "Cancelado"),
                        ],
                        default="pendente",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "forma_pagamento",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Forma de Pagamento"
                    ),
                ),
                (
                    "codigo_barras",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Código de Barras"
                    ),
                ),
                (
                    "observacoes",
                    models.TextField(blank=True, verbose_name="Observações"),
                ),
                (
                    "data_criacao",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "data_atualizacao",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Data de Atualização"
                    ),
                ),
                (
                    "associado",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mensalidades",
                        to="associados.associado",
                        verbose_name="Associado",
                    ),
                ),
                (
                    "tipo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="financeiro.tipomensalidade",
                        verbose_name="Tipo de Mensalidade",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mensalidade",
                "verbose_name_plural": "Mensalidades",
                "ordering": ["-data_vencimento"],
            },
        ),
        migrations.CreateModel(
            name="Pagamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "valor_pago",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                        verbose_name="Valor Pago",
                    ),
                ),
                (
                    "forma_pagamento",
                    models.CharField(
                        choices=[
                            ("pix", "PIX"),
                            ("boleto", "Boleto"),
                            ("cartao_credito", "Cartão de Crédito"),
                            ("cartao_debito", "Cartão de Débito"),
                            ("dinheiro", "Dinheiro"),
                            ("transferencia", "Transferência Bancária"),
                            ("outro", "Outro"),
                        ],
                        max_length=20,
                        verbose_name="Forma de Pagamento",
                    ),
                ),
                (
                    "data_pagamento",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data e Hora do Pagamento"
                    ),
                ),
                (
                    "comprovante",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="financeiro/comprovantes/",
                        verbose_name="Comprovante",
                    ),
                ),
                (
                    "observacoes",
                    models.TextField(blank=True, verbose_name="Observações"),
                ),
                (
                    "mensalidade",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pagamentos",
                        to="financeiro.mensalidade",
                        verbose_name="Mensalidade",
                    ),
                ),
                (
                    "usuario_registro",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário que Registrou",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pagamento",
                "verbose_name_plural": "Pagamentos",
                "ordering": ["-data_pagamento"],
            },
        ),
        migrations.CreateModel(
            name="RelatorioFinanceiro",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("mensalidades", "Relatório de Mensalidades"),
                            ("receitas", "Relatório de Receitas"),
                            ("despesas", "Relatório de Despesas"),
                            ("inadimplencia", "Relatório de Inadimplência"),
                            ("balanco", "Balanço Geral"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Relatório",
                    ),
                ),
                ("periodo_inicio", models.DateField(verbose_name="Período Início")),
                ("periodo_fim", models.DateField(verbose_name="Período Fim")),
                (
                    "arquivo",
                    models.FileField(
                        upload_to="financeiro/relatorios/",
                        verbose_name="Arquivo do Relatório",
                    ),
                ),
                (
                    "data_geracao",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Geração"
                    ),
                ),
                (
                    "usuario_geracao",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário que Gerou",
                    ),
                ),
            ],
            options={
                "verbose_name": "Relatório Financeiro",
                "verbose_name_plural": "Relatórios Financeiros",
                "ordering": ["-data_geracao"],
            },
        ),
        migrations.AddIndex(
            model_name="mensalidade",
            index=models.Index(fields=["status"], name="financeiro__status_b5344a_idx"),
        ),
        migrations.AddIndex(
            model_name="mensalidade",
            index=models.Index(
                fields=["data_vencimento"], name="financeiro__data_ve_0b255e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mensalidade",
            index=models.Index(
                fields=["associado", "status"], name="financeiro__associa_7c6179_idx"
            ),
        ),
    ]
